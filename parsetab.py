
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'MAIN_PROGRAMAND CLOSE_BRACES CLOSE_PARENTHESIS COLON COMMA DIVOP DO ELSE EQ FOR FUNC GE GT ID IF IS_VALUE LE LT MULOP NE OPEN_BRACES OPEN_PARENTHESIS OR PRINT READ SEQUENCE SUBOP SUMOP VAL WHILEempty :\n    MAIN_PROGRAM : STRUCTURES\n    \n    STRUCTURES  : FOR_LOOP STRUCTURES\n                | DO_WHILE_LOOP STRUCTURES\n                | WHILE_LOOP STRUCTURES\n                | ELSE_CONDITIONAL STRUCTURES\n                | IF_CONDITIONAL STRUCTURES\n                | OUTPUT STRUCTURES\n                | INPUT STRUCTURES\n                | VAR STRUCTURES\n                | FUNCTION STRUCTURES\n                | empty\n    \n    VAR : ID COMMA VAR\n        | ID IS_VALUE EXP\n    \n    INPUT \t: ID COMMA INPUT\n            | ID IS_VALUE READ OPEN_PARENTHESIS CLOSE_PARENTHESIS\n    \n    OUTPUT : PRINT OPEN_PARENTHESIS EXP CLOSE_PARENTHESIS\n    \n    IF_CONDITIONAL  : IF OPEN_PARENTHESIS EXP CLOSE_PARENTHESIS OPEN_BRACES STRUCTURES CLOSE_BRACES ELSE_CONDITIONAL\n                    | IF OPEN_PARENTHESIS EXP CLOSE_PARENTHESIS OPEN_BRACES STRUCTURES CLOSE_BRACES\n    \n    ELSE_CONDITIONAL : ELSE OPEN_BRACES STRUCTURES CLOSE_BRACES\n    \n    WHILE_LOOP : WHILE OPEN_PARENTHESIS EXP CLOSE_PARENTHESIS OPEN_BRACES STRUCTURES CLOSE_BRACES\n    \n    DO_WHILE_LOOP : DO OPEN_BRACES STRUCTURES CLOSE_BRACES WHILE OPEN_PARENTHESIS EXP CLOSE_PARENTHESIS\n    \n    FOR_LOOP : FOR OPEN_PARENTHESIS SEQUENCE CLOSE_PARENTHESIS OPEN_BRACES STRUCTURES CLOSE_BRACES \n    \n    FUNCTION : FUNC ID OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_BRACES STRUCTURES CLOSE_BRACES \n    \n    EXP\t: VALUE\n    \n    VALUE\t: EARITH\n            | ELOGIC\n            | OPEN_PARENTHESIS VALUE CLOSE_PARENTHESIS\n            | VAL\n    \n    EARITH \t: VALUE MULOP VALUE\n            | VALUE DIVOP VALUE\n            | VALUE SUMOP VALUE\n            | VALUE SUBOP VALUE\n    \n    ELOGIC\t: VALUE EQ VALUE\n            | VALUE NE VALUE\n            | VALUE LT VALUE\n            | VALUE GT VALUE\n            | VALUE LE VALUE\n            | VALUE GE VALUE\n            | VALUE AND VALUE\n            | VALUE OR VALUE\n    '
    
_lr_action_items = {'FOR':([0,3,4,5,6,7,8,9,10,11,31,33,43,44,45,46,50,51,53,71,73,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,100,102,103,104,105,106,],[13,13,13,13,13,13,13,13,13,13,13,13,-25,-26,-27,-29,-15,-13,-14,-20,-17,13,-28,13,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,13,-16,13,-23,-21,-19,-24,-22,-18,]),'DO':([0,3,4,5,6,7,8,9,10,11,31,33,43,44,45,46,50,51,53,71,73,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,100,102,103,104,105,106,],[14,14,14,14,14,14,14,14,14,14,14,14,-25,-26,-27,-29,-15,-13,-14,-20,-17,14,-28,14,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,14,-16,14,-23,-21,-19,-24,-22,-18,]),'WHILE':([0,3,4,5,6,7,8,9,10,11,31,33,43,44,45,46,50,51,53,56,71,73,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,100,102,103,104,105,106,],[15,15,15,15,15,15,15,15,15,15,15,15,-25,-26,-27,-29,-15,-13,-14,77,-20,-17,15,-28,15,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,15,-16,15,-23,-21,-19,-24,-22,-18,]),'ELSE':([0,3,4,5,6,7,8,9,10,11,31,33,43,44,45,46,50,51,53,71,73,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,100,102,103,104,105,106,],[16,16,16,16,16,16,16,16,16,16,16,16,-25,-26,-27,-29,-15,-13,-14,-20,-17,16,-28,16,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,16,-16,16,-23,-21,16,-24,-22,-18,]),'IF':([0,3,4,5,6,7,8,9,10,11,31,33,43,44,45,46,50,51,53,71,73,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,100,102,103,104,105,106,],[17,17,17,17,17,17,17,17,17,17,17,17,-25,-26,-27,-29,-15,-13,-14,-20,-17,17,-28,17,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,17,-16,17,-23,-21,-19,-24,-22,-18,]),'PRINT':([0,3,4,5,6,7,8,9,10,11,31,33,43,44,45,46,50,51,53,71,73,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,100,102,103,104,105,106,],[18,18,18,18,18,18,18,18,18,18,18,18,-25,-26,-27,-29,-15,-13,-14,-20,-17,18,-28,18,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,18,-16,18,-23,-21,-19,-24,-22,-18,]),'ID':([0,3,4,5,6,7,8,9,10,11,20,31,33,36,43,44,45,46,50,51,53,71,73,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,100,102,103,104,105,106,],[19,19,19,19,19,19,19,19,19,19,38,19,19,19,-25,-26,-27,-29,-15,-13,-14,-20,-17,19,-28,19,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,19,-16,19,-23,-21,-19,-24,-22,-18,]),'FUNC':([0,3,4,5,6,7,8,9,10,11,31,33,43,44,45,46,50,51,53,71,73,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,100,102,103,104,105,106,],[20,20,20,20,20,20,20,20,20,20,20,20,-25,-26,-27,-29,-15,-13,-14,-20,-17,20,-28,20,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,20,-16,20,-23,-21,-19,-24,-22,-18,]),'$end':([0,1,2,3,4,5,6,7,8,9,10,11,12,21,22,23,24,25,26,27,28,29,43,44,45,46,50,51,53,71,73,78,80,81,82,83,84,85,86,87,88,89,90,91,93,100,102,103,104,105,106,],[-1,0,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-12,-3,-4,-5,-6,-7,-8,-9,-10,-11,-25,-26,-27,-29,-15,-13,-14,-20,-17,-28,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-16,-23,-21,-19,-24,-22,-18,]),'CLOSE_BRACES':([3,4,5,6,7,8,9,10,11,12,21,22,23,24,25,26,27,28,29,31,33,40,43,44,45,46,47,50,51,53,71,73,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,99,100,102,103,104,105,106,],[-1,-1,-1,-1,-1,-1,-1,-1,-1,-12,-3,-4,-5,-6,-7,-8,-9,-10,-11,-1,-1,56,-25,-26,-27,-29,71,-15,-13,-14,-20,-17,-1,-28,-1,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-1,-16,-1,100,102,103,104,-23,-21,-19,-24,-22,-18,]),'OPEN_PARENTHESIS':([13,15,17,18,32,34,35,37,38,41,52,59,60,61,62,63,64,65,66,67,68,69,70,77,96,],[30,32,34,35,41,41,41,41,54,41,74,41,41,41,41,41,41,41,41,41,41,41,41,96,41,]),'OPEN_BRACES':([14,16,55,58,72,75,],[31,33,76,79,92,94,]),'COMMA':([19,],[36,]),'IS_VALUE':([19,],[37,]),'SEQUENCE':([30,],[39,]),'VAL':([32,34,35,37,41,59,60,61,62,63,64,65,66,67,68,69,70,96,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'READ':([37,],[52,]),'CLOSE_PARENTHESIS':([39,42,43,44,45,46,48,49,54,57,74,78,80,81,82,83,84,85,86,87,88,89,90,91,101,],[55,58,-25,-26,-27,-29,72,73,75,78,93,-28,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,105,]),'MULOP':([43,44,45,46,57,78,80,81,82,83,84,85,86,87,88,89,90,91,],[59,-26,-27,-29,59,-28,59,59,59,59,59,59,59,59,59,59,59,59,]),'DIVOP':([43,44,45,46,57,78,80,81,82,83,84,85,86,87,88,89,90,91,],[60,-26,-27,-29,60,-28,60,60,60,60,60,60,60,60,60,60,60,60,]),'SUMOP':([43,44,45,46,57,78,80,81,82,83,84,85,86,87,88,89,90,91,],[61,-26,-27,-29,61,-28,61,61,61,61,61,61,61,61,61,61,61,61,]),'SUBOP':([43,44,45,46,57,78,80,81,82,83,84,85,86,87,88,89,90,91,],[62,-26,-27,-29,62,-28,62,62,62,62,62,62,62,62,62,62,62,62,]),'EQ':([43,44,45,46,57,78,80,81,82,83,84,85,86,87,88,89,90,91,],[63,-26,-27,-29,63,-28,63,63,63,63,63,63,63,63,63,63,63,63,]),'NE':([43,44,45,46,57,78,80,81,82,83,84,85,86,87,88,89,90,91,],[64,-26,-27,-29,64,-28,64,64,64,64,64,64,64,64,64,64,64,64,]),'LT':([43,44,45,46,57,78,80,81,82,83,84,85,86,87,88,89,90,91,],[65,-26,-27,-29,65,-28,65,65,65,65,65,65,65,65,65,65,65,65,]),'GT':([43,44,45,46,57,78,80,81,82,83,84,85,86,87,88,89,90,91,],[66,-26,-27,-29,66,-28,66,66,66,66,66,66,66,66,66,66,66,66,]),'LE':([43,44,45,46,57,78,80,81,82,83,84,85,86,87,88,89,90,91,],[67,-26,-27,-29,67,-28,67,67,67,67,67,67,67,67,67,67,67,67,]),'GE':([43,44,45,46,57,78,80,81,82,83,84,85,86,87,88,89,90,91,],[68,-26,-27,-29,68,-28,68,68,68,68,68,68,68,68,68,68,68,68,]),'AND':([43,44,45,46,57,78,80,81,82,83,84,85,86,87,88,89,90,91,],[69,-26,-27,-29,69,-28,69,69,69,69,69,69,69,69,69,69,69,69,]),'OR':([43,44,45,46,57,78,80,81,82,83,84,85,86,87,88,89,90,91,],[70,-26,-27,-29,70,-28,70,70,70,70,70,70,70,70,70,70,70,70,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'MAIN_PROGRAM':([0,],[1,]),'STRUCTURES':([0,3,4,5,6,7,8,9,10,11,31,33,76,79,92,94,],[2,21,22,23,24,25,26,27,28,29,40,47,95,97,98,99,]),'FOR_LOOP':([0,3,4,5,6,7,8,9,10,11,31,33,76,79,92,94,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'DO_WHILE_LOOP':([0,3,4,5,6,7,8,9,10,11,31,33,76,79,92,94,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'WHILE_LOOP':([0,3,4,5,6,7,8,9,10,11,31,33,76,79,92,94,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'ELSE_CONDITIONAL':([0,3,4,5,6,7,8,9,10,11,31,33,76,79,92,94,103,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,106,]),'IF_CONDITIONAL':([0,3,4,5,6,7,8,9,10,11,31,33,76,79,92,94,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'OUTPUT':([0,3,4,5,6,7,8,9,10,11,31,33,76,79,92,94,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'INPUT':([0,3,4,5,6,7,8,9,10,11,31,33,36,76,79,92,94,],[9,9,9,9,9,9,9,9,9,9,9,9,50,9,9,9,9,]),'VAR':([0,3,4,5,6,7,8,9,10,11,31,33,36,76,79,92,94,],[10,10,10,10,10,10,10,10,10,10,10,10,51,10,10,10,10,]),'FUNCTION':([0,3,4,5,6,7,8,9,10,11,31,33,76,79,92,94,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'empty':([0,3,4,5,6,7,8,9,10,11,31,33,76,79,92,94,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'EXP':([32,34,35,37,96,],[42,48,49,53,101,]),'VALUE':([32,34,35,37,41,59,60,61,62,63,64,65,66,67,68,69,70,96,],[43,43,43,43,57,80,81,82,83,84,85,86,87,88,89,90,91,43,]),'EARITH':([32,34,35,37,41,59,60,61,62,63,64,65,66,67,68,69,70,96,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'ELOGIC':([32,34,35,37,41,59,60,61,62,63,64,65,66,67,68,69,70,96,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> MAIN_PROGRAM","S'",1,None,None,None),
  ('empty -> <empty>','empty',0,'p_empty','Aurorus2.py',276),
  ('MAIN_PROGRAM -> STRUCTURES','MAIN_PROGRAM',1,'p_MAIN_PROGRAM','Aurorus2.py',290),
  ('STRUCTURES -> FOR_LOOP STRUCTURES','STRUCTURES',2,'p_STRUCTURES','Aurorus2.py',296),
  ('STRUCTURES -> DO_WHILE_LOOP STRUCTURES','STRUCTURES',2,'p_STRUCTURES','Aurorus2.py',297),
  ('STRUCTURES -> WHILE_LOOP STRUCTURES','STRUCTURES',2,'p_STRUCTURES','Aurorus2.py',298),
  ('STRUCTURES -> ELSE_CONDITIONAL STRUCTURES','STRUCTURES',2,'p_STRUCTURES','Aurorus2.py',299),
  ('STRUCTURES -> IF_CONDITIONAL STRUCTURES','STRUCTURES',2,'p_STRUCTURES','Aurorus2.py',300),
  ('STRUCTURES -> OUTPUT STRUCTURES','STRUCTURES',2,'p_STRUCTURES','Aurorus2.py',301),
  ('STRUCTURES -> INPUT STRUCTURES','STRUCTURES',2,'p_STRUCTURES','Aurorus2.py',302),
  ('STRUCTURES -> VAR STRUCTURES','STRUCTURES',2,'p_STRUCTURES','Aurorus2.py',303),
  ('STRUCTURES -> FUNCTION STRUCTURES','STRUCTURES',2,'p_STRUCTURES','Aurorus2.py',304),
  ('STRUCTURES -> empty','STRUCTURES',1,'p_STRUCTURES','Aurorus2.py',305),
  ('VAR -> ID COMMA VAR','VAR',3,'p_VAR','Aurorus2.py',316),
  ('VAR -> ID IS_VALUE EXP','VAR',3,'p_VAR','Aurorus2.py',317),
  ('INPUT -> ID COMMA INPUT','INPUT',3,'p_INPUT','Aurorus2.py',347),
  ('INPUT -> ID IS_VALUE READ OPEN_PARENTHESIS CLOSE_PARENTHESIS','INPUT',5,'p_INPUT','Aurorus2.py',348),
  ('OUTPUT -> PRINT OPEN_PARENTHESIS EXP CLOSE_PARENTHESIS','OUTPUT',4,'p_OUTPUT','Aurorus2.py',355),
  ('IF_CONDITIONAL -> IF OPEN_PARENTHESIS EXP CLOSE_PARENTHESIS OPEN_BRACES STRUCTURES CLOSE_BRACES ELSE_CONDITIONAL','IF_CONDITIONAL',8,'p_IF_CONDITIONAL','Aurorus2.py',362),
  ('IF_CONDITIONAL -> IF OPEN_PARENTHESIS EXP CLOSE_PARENTHESIS OPEN_BRACES STRUCTURES CLOSE_BRACES','IF_CONDITIONAL',7,'p_IF_CONDITIONAL','Aurorus2.py',363),
  ('ELSE_CONDITIONAL -> ELSE OPEN_BRACES STRUCTURES CLOSE_BRACES','ELSE_CONDITIONAL',4,'p_ELSE_CONDITIONAL','Aurorus2.py',386),
  ('WHILE_LOOP -> WHILE OPEN_PARENTHESIS EXP CLOSE_PARENTHESIS OPEN_BRACES STRUCTURES CLOSE_BRACES','WHILE_LOOP',7,'p_WHILE_LOOP','Aurorus2.py',392),
  ('DO_WHILE_LOOP -> DO OPEN_BRACES STRUCTURES CLOSE_BRACES WHILE OPEN_PARENTHESIS EXP CLOSE_PARENTHESIS','DO_WHILE_LOOP',8,'p_DO_WHILE_LOOP','Aurorus2.py',398),
  ('FOR_LOOP -> FOR OPEN_PARENTHESIS SEQUENCE CLOSE_PARENTHESIS OPEN_BRACES STRUCTURES CLOSE_BRACES','FOR_LOOP',7,'p_FOR_LOOP','Aurorus2.py',404),
  ('FUNCTION -> FUNC ID OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_BRACES STRUCTURES CLOSE_BRACES','FUNCTION',7,'p_FUNCTION','Aurorus2.py',410),
  ('EXP -> VALUE','EXP',1,'p_EXP','Aurorus2.py',419),
  ('VALUE -> EARITH','VALUE',1,'p_VALUE','Aurorus2.py',431),
  ('VALUE -> ELOGIC','VALUE',1,'p_VALUE','Aurorus2.py',432),
  ('VALUE -> OPEN_PARENTHESIS VALUE CLOSE_PARENTHESIS','VALUE',3,'p_VALUE','Aurorus2.py',433),
  ('VALUE -> VAL','VALUE',1,'p_VALUE','Aurorus2.py',434),
  ('EARITH -> VALUE MULOP VALUE','EARITH',3,'p_EARITH','Aurorus2.py',449),
  ('EARITH -> VALUE DIVOP VALUE','EARITH',3,'p_EARITH','Aurorus2.py',450),
  ('EARITH -> VALUE SUMOP VALUE','EARITH',3,'p_EARITH','Aurorus2.py',451),
  ('EARITH -> VALUE SUBOP VALUE','EARITH',3,'p_EARITH','Aurorus2.py',452),
  ('ELOGIC -> VALUE EQ VALUE','ELOGIC',3,'p_ELOGIC','Aurorus2.py',464),
  ('ELOGIC -> VALUE NE VALUE','ELOGIC',3,'p_ELOGIC','Aurorus2.py',465),
  ('ELOGIC -> VALUE LT VALUE','ELOGIC',3,'p_ELOGIC','Aurorus2.py',466),
  ('ELOGIC -> VALUE GT VALUE','ELOGIC',3,'p_ELOGIC','Aurorus2.py',467),
  ('ELOGIC -> VALUE LE VALUE','ELOGIC',3,'p_ELOGIC','Aurorus2.py',468),
  ('ELOGIC -> VALUE GE VALUE','ELOGIC',3,'p_ELOGIC','Aurorus2.py',469),
  ('ELOGIC -> VALUE AND VALUE','ELOGIC',3,'p_ELOGIC','Aurorus2.py',470),
  ('ELOGIC -> VALUE OR VALUE','ELOGIC',3,'p_ELOGIC','Aurorus2.py',471),
]
