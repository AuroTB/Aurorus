
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'MAIN_PROGRAMAND CLOSE_BRACES CLOSE_PARENTHESIS COLON COMMA DIVOP DO ELSE EQ FOR FUNC GE GT ID IF IS_VALUE LE LT MULOP NE OPEN_BRACES OPEN_PARENTHESIS OR PRINT READ SUBOP SUMOP VAL WHILEempty :\n    MAIN_PROGRAM : STRUCTURES\n    \n    STRUCTURES  : FOR_LOOP STRUCTURES\n                | DO_WHILE_LOOP STRUCTURES\n                | WHILE_LOOP STRUCTURES\n                | ELSE_CONDITIONAL STRUCTURES\n                | IF_CONDITIONAL STRUCTURES\n                | OUTPUT STRUCTURES\n                | INPUT STRUCTURES\n                | VAR STRUCTURES\n                | FUNCTION STRUCTURES\n                | empty\n    \n    VAR : ID COMMA VAR\n        | ID IS_VALUE VALUE\n    \n    INPUT \t: ID COMMA INPUT\n            | ID IS_VALUE READ OPEN_PARENTHESIS CLOSE_PARENTHESIS\n    \n    OUTPUT : PRINT OPEN_PARENTHESIS ID CLOSE_PARENTHESIS\n    \n    IF_CONDITIONAL  : IF OPEN_PARENTHESIS VALUE CLOSE_PARENTHESIS OPEN_BRACES STRUCTURES CLOSE_BRACES ELSE_CONDITIONAL\n                    | IF OPEN_PARENTHESIS VALUE CLOSE_PARENTHESIS OPEN_BRACES STRUCTURES CLOSE_BRACES\n    \n    ELSE_CONDITIONAL : ELSE OPEN_BRACES STRUCTURES CLOSE_BRACES\n    \n    WHILE_LOOP : WHILE OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_BRACES STRUCTURES CLOSE_BRACES\n    \n    DO_WHILE_LOOP : DO OPEN_BRACES STRUCTURES CLOSE_BRACES WHILE OPEN_PARENTHESIS CLOSE_PARENTHESIS\n    \n    FOR_LOOP : FOR OPEN_PARENTHESIS VALUE COLON VALUE CLOSE_PARENTHESIS OPEN_BRACES STRUCTURES CLOSE_BRACES \n    \n    FUNCTION : FUNC ID OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_BRACES STRUCTURES CLOSE_BRACES \n    \n    VALUE\t: EARITH\n            | ELOGIC\n            | OPEN_PARENTHESIS VALUE CLOSE_PARENTHESIS\n            | VAL\n    \n    EARITH \t: VALUE MULOP VALUE\n            | VALUE DIVOP VALUE\n            | VALUE SUMOP VALUE\n            | VALUE SUBOP VALUE\n    \n    ELOGIC\t: VALUE EQ VALUE\n            | VALUE NE VALUE\n            | VALUE LT VALUE\n            | VALUE GT VALUE\n            | VALUE LE VALUE\n            | VALUE GE VALUE\n            | VALUE AND VALUE\n            | VALUE OR VALUE\n    '
    
_lr_action_items = {'FOR':([0,3,4,5,6,7,8,9,10,11,31,33,41,42,43,49,50,52,69,70,72,75,77,78,79,80,81,82,83,84,85,86,87,88,91,92,93,96,99,100,101,102,104,105,],[13,13,13,13,13,13,13,13,13,13,13,13,-25,-26,-28,-15,-13,-14,13,-20,-17,-27,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,13,-16,13,-21,13,-22,-19,-24,-18,-23,]),'DO':([0,3,4,5,6,7,8,9,10,11,31,33,41,42,43,49,50,52,69,70,72,75,77,78,79,80,81,82,83,84,85,86,87,88,91,92,93,96,99,100,101,102,104,105,],[14,14,14,14,14,14,14,14,14,14,14,14,-25,-26,-28,-15,-13,-14,14,-20,-17,-27,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,14,-16,14,-21,14,-22,-19,-24,-18,-23,]),'WHILE':([0,3,4,5,6,7,8,9,10,11,31,33,41,42,43,49,50,52,68,69,70,72,75,77,78,79,80,81,82,83,84,85,86,87,88,91,92,93,96,99,100,101,102,104,105,],[15,15,15,15,15,15,15,15,15,15,15,15,-25,-26,-28,-15,-13,-14,89,15,-20,-17,-27,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,15,-16,15,-21,15,-22,-19,-24,-18,-23,]),'ELSE':([0,3,4,5,6,7,8,9,10,11,31,33,41,42,43,49,50,52,69,70,72,75,77,78,79,80,81,82,83,84,85,86,87,88,91,92,93,96,99,100,101,102,104,105,],[16,16,16,16,16,16,16,16,16,16,16,16,-25,-26,-28,-15,-13,-14,16,-20,-17,-27,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,16,-16,16,-21,16,-22,16,-24,-18,-23,]),'IF':([0,3,4,5,6,7,8,9,10,11,31,33,41,42,43,49,50,52,69,70,72,75,77,78,79,80,81,82,83,84,85,86,87,88,91,92,93,96,99,100,101,102,104,105,],[17,17,17,17,17,17,17,17,17,17,17,17,-25,-26,-28,-15,-13,-14,17,-20,-17,-27,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,17,-16,17,-21,17,-22,-19,-24,-18,-23,]),'PRINT':([0,3,4,5,6,7,8,9,10,11,31,33,41,42,43,49,50,52,69,70,72,75,77,78,79,80,81,82,83,84,85,86,87,88,91,92,93,96,99,100,101,102,104,105,],[18,18,18,18,18,18,18,18,18,18,18,18,-25,-26,-28,-15,-13,-14,18,-20,-17,-27,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,18,-16,18,-21,18,-22,-19,-24,-18,-23,]),'ID':([0,3,4,5,6,7,8,9,10,11,20,31,33,35,36,41,42,43,49,50,52,69,70,72,75,77,78,79,80,81,82,83,84,85,86,87,88,91,92,93,96,99,100,101,102,104,105,],[19,19,19,19,19,19,19,19,19,19,38,19,19,48,19,-25,-26,-28,-15,-13,-14,19,-20,-17,-27,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,19,-16,19,-21,19,-22,-19,-24,-18,-23,]),'FUNC':([0,3,4,5,6,7,8,9,10,11,31,33,41,42,43,49,50,52,69,70,72,75,77,78,79,80,81,82,83,84,85,86,87,88,91,92,93,96,99,100,101,102,104,105,],[20,20,20,20,20,20,20,20,20,20,20,20,-25,-26,-28,-15,-13,-14,20,-20,-17,-27,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,20,-16,20,-21,20,-22,-19,-24,-18,-23,]),'$end':([0,1,2,3,4,5,6,7,8,9,10,11,12,21,22,23,24,25,26,27,28,29,41,42,43,49,50,52,70,72,75,77,78,79,80,81,82,83,84,85,86,87,88,92,96,100,101,102,104,105,],[-1,0,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-12,-3,-4,-5,-6,-7,-8,-9,-10,-11,-25,-26,-28,-15,-13,-14,-20,-17,-27,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-16,-21,-22,-19,-24,-18,-23,]),'CLOSE_BRACES':([3,4,5,6,7,8,9,10,11,12,21,22,23,24,25,26,27,28,29,31,33,41,42,43,44,46,49,50,52,69,70,72,75,77,78,79,80,81,82,83,84,85,86,87,88,90,91,92,93,96,97,98,99,100,101,102,103,104,105,],[-1,-1,-1,-1,-1,-1,-1,-1,-1,-12,-3,-4,-5,-6,-7,-8,-9,-10,-11,-1,-1,-25,-26,-28,68,70,-15,-13,-14,-1,-20,-17,-27,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,96,-1,-16,-1,-21,101,102,-1,-22,-19,-24,105,-18,-23,]),'OPEN_PARENTHESIS':([13,15,17,18,30,34,37,38,39,51,55,56,57,58,59,60,61,62,63,64,65,66,67,89,],[30,32,34,35,39,39,39,53,39,73,39,39,39,39,39,39,39,39,39,39,39,39,39,95,]),'OPEN_BRACES':([14,16,45,71,74,94,],[31,33,69,91,93,99,]),'COMMA':([19,],[36,]),'IS_VALUE':([19,],[37,]),'VAL':([30,34,37,39,55,56,57,58,59,60,61,62,63,64,65,66,67,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'CLOSE_PARENTHESIS':([32,41,42,43,47,48,53,54,73,75,76,77,78,79,80,81,82,83,84,85,86,87,88,95,],[45,-25,-26,-28,71,72,74,75,92,-27,94,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,100,]),'READ':([37,],[51,]),'COLON':([40,41,42,43,75,77,78,79,80,81,82,83,84,85,86,87,88,],[55,-25,-26,-28,-27,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,]),'MULOP':([40,41,42,43,47,52,54,75,76,77,78,79,80,81,82,83,84,85,86,87,88,],[56,-25,-26,-28,56,56,56,-27,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'DIVOP':([40,41,42,43,47,52,54,75,76,77,78,79,80,81,82,83,84,85,86,87,88,],[57,-25,-26,-28,57,57,57,-27,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'SUMOP':([40,41,42,43,47,52,54,75,76,77,78,79,80,81,82,83,84,85,86,87,88,],[58,-25,-26,-28,58,58,58,-27,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'SUBOP':([40,41,42,43,47,52,54,75,76,77,78,79,80,81,82,83,84,85,86,87,88,],[59,-25,-26,-28,59,59,59,-27,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'EQ':([40,41,42,43,47,52,54,75,76,77,78,79,80,81,82,83,84,85,86,87,88,],[60,-25,-26,-28,60,60,60,-27,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'NE':([40,41,42,43,47,52,54,75,76,77,78,79,80,81,82,83,84,85,86,87,88,],[61,-25,-26,-28,61,61,61,-27,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'LT':([40,41,42,43,47,52,54,75,76,77,78,79,80,81,82,83,84,85,86,87,88,],[62,-25,-26,-28,62,62,62,-27,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'GT':([40,41,42,43,47,52,54,75,76,77,78,79,80,81,82,83,84,85,86,87,88,],[63,-25,-26,-28,63,63,63,-27,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'LE':([40,41,42,43,47,52,54,75,76,77,78,79,80,81,82,83,84,85,86,87,88,],[64,-25,-26,-28,64,64,64,-27,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'GE':([40,41,42,43,47,52,54,75,76,77,78,79,80,81,82,83,84,85,86,87,88,],[65,-25,-26,-28,65,65,65,-27,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'AND':([40,41,42,43,47,52,54,75,76,77,78,79,80,81,82,83,84,85,86,87,88,],[66,-25,-26,-28,66,66,66,-27,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'OR':([40,41,42,43,47,52,54,75,76,77,78,79,80,81,82,83,84,85,86,87,88,],[67,-25,-26,-28,67,67,67,-27,67,67,67,67,67,67,67,67,67,67,67,67,67,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'MAIN_PROGRAM':([0,],[1,]),'STRUCTURES':([0,3,4,5,6,7,8,9,10,11,31,33,69,91,93,99,],[2,21,22,23,24,25,26,27,28,29,44,46,90,97,98,103,]),'FOR_LOOP':([0,3,4,5,6,7,8,9,10,11,31,33,69,91,93,99,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'DO_WHILE_LOOP':([0,3,4,5,6,7,8,9,10,11,31,33,69,91,93,99,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'WHILE_LOOP':([0,3,4,5,6,7,8,9,10,11,31,33,69,91,93,99,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'ELSE_CONDITIONAL':([0,3,4,5,6,7,8,9,10,11,31,33,69,91,93,99,101,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,104,]),'IF_CONDITIONAL':([0,3,4,5,6,7,8,9,10,11,31,33,69,91,93,99,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'OUTPUT':([0,3,4,5,6,7,8,9,10,11,31,33,69,91,93,99,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'INPUT':([0,3,4,5,6,7,8,9,10,11,31,33,36,69,91,93,99,],[9,9,9,9,9,9,9,9,9,9,9,9,49,9,9,9,9,]),'VAR':([0,3,4,5,6,7,8,9,10,11,31,33,36,69,91,93,99,],[10,10,10,10,10,10,10,10,10,10,10,10,50,10,10,10,10,]),'FUNCTION':([0,3,4,5,6,7,8,9,10,11,31,33,69,91,93,99,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'empty':([0,3,4,5,6,7,8,9,10,11,31,33,69,91,93,99,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'VALUE':([30,34,37,39,55,56,57,58,59,60,61,62,63,64,65,66,67,],[40,47,52,54,76,77,78,79,80,81,82,83,84,85,86,87,88,]),'EARITH':([30,34,37,39,55,56,57,58,59,60,61,62,63,64,65,66,67,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'ELOGIC':([30,34,37,39,55,56,57,58,59,60,61,62,63,64,65,66,67,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> MAIN_PROGRAM","S'",1,None,None,None),
  ('empty -> <empty>','empty',0,'p_empty','Aurorus2.py',116),
  ('MAIN_PROGRAM -> STRUCTURES','MAIN_PROGRAM',1,'p_MAIN_PROGRAM','Aurorus2.py',130),
  ('STRUCTURES -> FOR_LOOP STRUCTURES','STRUCTURES',2,'p_STRUCTURES','Aurorus2.py',136),
  ('STRUCTURES -> DO_WHILE_LOOP STRUCTURES','STRUCTURES',2,'p_STRUCTURES','Aurorus2.py',137),
  ('STRUCTURES -> WHILE_LOOP STRUCTURES','STRUCTURES',2,'p_STRUCTURES','Aurorus2.py',138),
  ('STRUCTURES -> ELSE_CONDITIONAL STRUCTURES','STRUCTURES',2,'p_STRUCTURES','Aurorus2.py',139),
  ('STRUCTURES -> IF_CONDITIONAL STRUCTURES','STRUCTURES',2,'p_STRUCTURES','Aurorus2.py',140),
  ('STRUCTURES -> OUTPUT STRUCTURES','STRUCTURES',2,'p_STRUCTURES','Aurorus2.py',141),
  ('STRUCTURES -> INPUT STRUCTURES','STRUCTURES',2,'p_STRUCTURES','Aurorus2.py',142),
  ('STRUCTURES -> VAR STRUCTURES','STRUCTURES',2,'p_STRUCTURES','Aurorus2.py',143),
  ('STRUCTURES -> FUNCTION STRUCTURES','STRUCTURES',2,'p_STRUCTURES','Aurorus2.py',144),
  ('STRUCTURES -> empty','STRUCTURES',1,'p_STRUCTURES','Aurorus2.py',145),
  ('VAR -> ID COMMA VAR','VAR',3,'p_VAR','Aurorus2.py',151),
  ('VAR -> ID IS_VALUE VALUE','VAR',3,'p_VAR','Aurorus2.py',152),
  ('INPUT -> ID COMMA INPUT','INPUT',3,'p_INPUT','Aurorus2.py',171),
  ('INPUT -> ID IS_VALUE READ OPEN_PARENTHESIS CLOSE_PARENTHESIS','INPUT',5,'p_INPUT','Aurorus2.py',172),
  ('OUTPUT -> PRINT OPEN_PARENTHESIS ID CLOSE_PARENTHESIS','OUTPUT',4,'p_OUTPUT','Aurorus2.py',179),
  ('IF_CONDITIONAL -> IF OPEN_PARENTHESIS VALUE CLOSE_PARENTHESIS OPEN_BRACES STRUCTURES CLOSE_BRACES ELSE_CONDITIONAL','IF_CONDITIONAL',8,'p_IF_CONDITIONAL','Aurorus2.py',186),
  ('IF_CONDITIONAL -> IF OPEN_PARENTHESIS VALUE CLOSE_PARENTHESIS OPEN_BRACES STRUCTURES CLOSE_BRACES','IF_CONDITIONAL',7,'p_IF_CONDITIONAL','Aurorus2.py',187),
  ('ELSE_CONDITIONAL -> ELSE OPEN_BRACES STRUCTURES CLOSE_BRACES','ELSE_CONDITIONAL',4,'p_ELSE_CONDITIONAL','Aurorus2.py',197),
  ('WHILE_LOOP -> WHILE OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_BRACES STRUCTURES CLOSE_BRACES','WHILE_LOOP',6,'p_WHILE_LOOP','Aurorus2.py',203),
  ('DO_WHILE_LOOP -> DO OPEN_BRACES STRUCTURES CLOSE_BRACES WHILE OPEN_PARENTHESIS CLOSE_PARENTHESIS','DO_WHILE_LOOP',7,'p_DO_WHILE_LOOP','Aurorus2.py',209),
  ('FOR_LOOP -> FOR OPEN_PARENTHESIS VALUE COLON VALUE CLOSE_PARENTHESIS OPEN_BRACES STRUCTURES CLOSE_BRACES','FOR_LOOP',9,'p_FOR_LOOP','Aurorus2.py',215),
  ('FUNCTION -> FUNC ID OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_BRACES STRUCTURES CLOSE_BRACES','FUNCTION',7,'p_FUNCTION','Aurorus2.py',221),
  ('VALUE -> EARITH','VALUE',1,'p_VALUE','Aurorus2.py',231),
  ('VALUE -> ELOGIC','VALUE',1,'p_VALUE','Aurorus2.py',232),
  ('VALUE -> OPEN_PARENTHESIS VALUE CLOSE_PARENTHESIS','VALUE',3,'p_VALUE','Aurorus2.py',233),
  ('VALUE -> VAL','VALUE',1,'p_VALUE','Aurorus2.py',234),
  ('EARITH -> VALUE MULOP VALUE','EARITH',3,'p_EARITH','Aurorus2.py',250),
  ('EARITH -> VALUE DIVOP VALUE','EARITH',3,'p_EARITH','Aurorus2.py',251),
  ('EARITH -> VALUE SUMOP VALUE','EARITH',3,'p_EARITH','Aurorus2.py',252),
  ('EARITH -> VALUE SUBOP VALUE','EARITH',3,'p_EARITH','Aurorus2.py',253),
  ('ELOGIC -> VALUE EQ VALUE','ELOGIC',3,'p_ELOGIC','Aurorus2.py',268),
  ('ELOGIC -> VALUE NE VALUE','ELOGIC',3,'p_ELOGIC','Aurorus2.py',269),
  ('ELOGIC -> VALUE LT VALUE','ELOGIC',3,'p_ELOGIC','Aurorus2.py',270),
  ('ELOGIC -> VALUE GT VALUE','ELOGIC',3,'p_ELOGIC','Aurorus2.py',271),
  ('ELOGIC -> VALUE LE VALUE','ELOGIC',3,'p_ELOGIC','Aurorus2.py',272),
  ('ELOGIC -> VALUE GE VALUE','ELOGIC',3,'p_ELOGIC','Aurorus2.py',273),
  ('ELOGIC -> VALUE AND VALUE','ELOGIC',3,'p_ELOGIC','Aurorus2.py',274),
  ('ELOGIC -> VALUE OR VALUE','ELOGIC',3,'p_ELOGIC','Aurorus2.py',275),
]
