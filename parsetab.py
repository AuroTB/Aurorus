
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'MAIN_PROGRAMAND CLOSE_BRACES CLOSE_PARENTHESIS COMMA DIVOP DO ELSE EQ FOR FUNC GE GT ID IF IS_VALUE LE LT MATRIX MATRIX_VAL MULOP NE OPEN_BRACES OPEN_PARENTHESIS OR PRINT READ SEQUENCE STRING SUBOP SUMOP VAL WHILEempty :\n    MAIN_PROGRAM : STRUCTURES\n    \n    STRUCTURES  : FOR_LOOP STRUCTURES\n                | DO_WHILE_LOOP STRUCTURES\n                | WHILE_LOOP STRUCTURES\n                | ELSE_CONDITIONAL STRUCTURES\n                | IF_CONDITIONAL STRUCTURES\n                | OUTPUT STRUCTURES\n                | INPUT STRUCTURES\n                | VAR STRUCTURES\n                | FUNCTION STRUCTURES\n                | FUNC_CALL STRUCTURES\n                | empty\n    \n    VAR : ID COMMA VAR\n        | ID IS_VALUE EXP\n        | ID IS_VALUE MATRIX\n    \n    INPUT \t: ID COMMA INPUT\n            | ID IS_VALUE READ OPEN_PARENTHESIS CLOSE_PARENTHESIS\n    \n    OUTPUT  : PRINT OPEN_PARENTHESIS EXP CLOSE_PARENTHESIS\n            | PRINT OPEN_PARENTHESIS STRING CLOSE_PARENTHESIS\n    \n    IF_CONDITIONAL  : IF OPEN_PARENTHESIS EXP CLOSE_PARENTHESIS OPEN_BRACES STRUCTURES CLOSE_BRACES ELSE_CONDITIONAL\n                    | IF OPEN_PARENTHESIS EXP CLOSE_PARENTHESIS OPEN_BRACES STRUCTURES CLOSE_BRACES\n    \n    ELSE_CONDITIONAL : ELSE OPEN_BRACES STRUCTURES CLOSE_BRACES\n    \n    WHILE_LOOP : WHILE OPEN_PARENTHESIS EXP CLOSE_PARENTHESIS OPEN_BRACES STRUCTURES CLOSE_BRACES\n    \n    DO_WHILE_LOOP : DO OPEN_BRACES STRUCTURES CLOSE_BRACES WHILE OPEN_PARENTHESIS EXP CLOSE_PARENTHESIS\n    \n    FOR_LOOP : FOR OPEN_PARENTHESIS SEQUENCE CLOSE_PARENTHESIS OPEN_BRACES STRUCTURES CLOSE_BRACES \n    \n    FUNCTION : FUNC ID OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_BRACES NON_FUNCTION CLOSE_BRACES \n    \n    NON_FUNCTION    : FOR_LOOP NON_FUNCTION\n                    | DO_WHILE_LOOP NON_FUNCTION\n                    | WHILE_LOOP NON_FUNCTION\n                    | ELSE_CONDITIONAL NON_FUNCTION\n                    | IF_CONDITIONAL NON_FUNCTION\n                    | OUTPUT NON_FUNCTION\n                    | INPUT NON_FUNCTION\n                    | VAR NON_FUNCTION\n                    | FUNC_CALL NON_FUNCTION\n                    | empty\n    \n    FUNC_CALL   : ID OPEN_PARENTHESIS CLOSE_PARENTHESIS\n    \n    EXP\t: VALUE\n    \n    VALUE\t: EARITH\n            | ELOGIC\n            | OPEN_PARENTHESIS VALUE CLOSE_PARENTHESIS\n            | VAL\n            | ID\n            | MATRIX_VAL\n    \n    EARITH \t: VALUE MULOP VALUE\n            | VALUE DIVOP VALUE\n            | VALUE SUMOP VALUE\n            | VALUE SUBOP VALUE\n    \n    ELOGIC\t: VALUE EQ VALUE\n            | VALUE NE VALUE\n            | VALUE LT VALUE\n            | VALUE GT VALUE\n            | VALUE LE VALUE\n            | VALUE GE VALUE\n            | VALUE AND VALUE\n            | VALUE OR VALUE\n    '
    
_lr_action_items = {'FOR':([0,3,4,5,6,7,8,9,10,11,12,33,35,46,47,48,49,50,51,57,58,60,61,62,80,82,83,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,110,111,112,113,114,115,116,117,118,120,122,123,124,134,135,],[14,14,14,14,14,14,14,14,14,14,14,14,14,-39,-40,-41,-43,-44,-45,-17,-14,-15,-16,-38,-23,-19,-20,14,-42,14,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,14,-18,14,14,14,14,14,14,14,14,14,14,-26,-24,-22,-27,-25,-21,]),'DO':([0,3,4,5,6,7,8,9,10,11,12,33,35,46,47,48,49,50,51,57,58,60,61,62,80,82,83,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,110,111,112,113,114,115,116,117,118,120,122,123,124,134,135,],[15,15,15,15,15,15,15,15,15,15,15,15,15,-39,-40,-41,-43,-44,-45,-17,-14,-15,-16,-38,-23,-19,-20,15,-42,15,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,15,-18,15,15,15,15,15,15,15,15,15,15,-26,-24,-22,-27,-25,-21,]),'WHILE':([0,3,4,5,6,7,8,9,10,11,12,33,35,46,47,48,49,50,51,57,58,60,61,62,65,80,82,83,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,110,111,112,113,114,115,116,117,118,120,122,123,124,134,135,],[16,16,16,16,16,16,16,16,16,16,16,16,16,-39,-40,-41,-43,-44,-45,-17,-14,-15,-16,-38,87,-23,-19,-20,16,-42,16,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,16,-18,16,16,16,16,16,16,16,16,16,16,-26,-24,-22,-27,-25,-21,]),'ELSE':([0,3,4,5,6,7,8,9,10,11,12,33,35,46,47,48,49,50,51,57,58,60,61,62,80,82,83,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,110,111,112,113,114,115,116,117,118,120,122,123,124,134,135,],[17,17,17,17,17,17,17,17,17,17,17,17,17,-39,-40,-41,-43,-44,-45,-17,-14,-15,-16,-38,-23,-19,-20,17,-42,17,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,17,-18,17,17,17,17,17,17,17,17,17,17,-26,-24,17,-27,-25,-21,]),'IF':([0,3,4,5,6,7,8,9,10,11,12,33,35,46,47,48,49,50,51,57,58,60,61,62,80,82,83,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,110,111,112,113,114,115,116,117,118,120,122,123,124,134,135,],[18,18,18,18,18,18,18,18,18,18,18,18,18,-39,-40,-41,-43,-44,-45,-17,-14,-15,-16,-38,-23,-19,-20,18,-42,18,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,18,-18,18,18,18,18,18,18,18,18,18,18,-26,-24,-22,-27,-25,-21,]),'PRINT':([0,3,4,5,6,7,8,9,10,11,12,33,35,46,47,48,49,50,51,57,58,60,61,62,80,82,83,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,110,111,112,113,114,115,116,117,118,120,122,123,124,134,135,],[19,19,19,19,19,19,19,19,19,19,19,19,19,-39,-40,-41,-43,-44,-45,-17,-14,-15,-16,-38,-23,-19,-20,19,-42,19,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,19,-18,19,19,19,19,19,19,19,19,19,19,-26,-24,-22,-27,-25,-21,]),'ID':([0,3,4,5,6,7,8,9,10,11,12,21,33,34,35,36,37,38,39,44,46,47,48,49,50,51,57,58,60,61,62,68,69,70,71,72,73,74,75,76,77,78,79,80,82,83,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,110,111,112,113,114,115,116,117,118,120,122,123,124,134,135,],[20,20,20,20,20,20,20,20,20,20,20,41,20,50,20,50,50,56,50,50,-39,-40,-41,-43,-44,-45,-17,-14,-15,-16,-38,50,50,50,50,50,50,50,50,50,50,50,50,-23,-19,-20,20,-42,20,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,20,-18,20,50,20,20,20,20,20,20,20,20,20,-26,-24,-22,-27,-25,-21,]),'FUNC':([0,3,4,5,6,7,8,9,10,11,12,33,35,46,47,48,49,50,51,57,58,60,61,62,80,82,83,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,120,122,123,124,134,135,],[21,21,21,21,21,21,21,21,21,21,21,21,21,-39,-40,-41,-43,-44,-45,-17,-14,-15,-16,-38,-23,-19,-20,21,-42,21,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,21,-18,-26,-24,-22,-27,-25,-21,]),'$end':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,22,23,24,25,26,27,28,29,30,31,46,47,48,49,50,51,57,58,60,61,62,80,82,83,88,90,91,92,93,94,95,96,97,98,99,100,101,103,120,122,123,124,134,135,],[-1,0,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-13,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-39,-40,-41,-43,-44,-45,-17,-14,-15,-16,-38,-23,-19,-20,-42,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-18,-26,-24,-22,-27,-25,-21,]),'CLOSE_BRACES':([3,4,5,6,7,8,9,10,11,12,13,22,23,24,25,26,27,28,29,30,31,33,35,43,46,47,48,49,50,51,52,57,58,60,61,62,80,82,83,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,107,108,109,110,111,112,113,114,115,116,117,118,119,120,122,123,124,125,126,127,128,129,130,131,132,133,134,135,],[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-13,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-1,-1,65,-39,-40,-41,-43,-44,-45,80,-17,-14,-15,-16,-38,-23,-19,-20,-1,-42,-1,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-1,-18,-1,120,122,123,124,-1,-1,-1,-1,-1,-1,-1,-1,-1,-37,-26,-24,-22,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-25,-21,]),'OPEN_PARENTHESIS':([14,16,18,19,20,34,36,37,39,41,44,59,68,69,70,71,72,73,74,75,76,77,78,79,87,106,],[32,34,36,37,40,44,44,44,44,63,44,84,44,44,44,44,44,44,44,44,44,44,44,44,106,44,]),'OPEN_BRACES':([15,17,64,67,81,85,],[33,35,86,89,102,104,]),'COMMA':([20,56,],[38,38,]),'IS_VALUE':([20,56,],[39,39,]),'SEQUENCE':([32,],[42,]),'VAL':([34,36,37,39,44,68,69,70,71,72,73,74,75,76,77,78,79,106,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'MATRIX_VAL':([34,36,37,39,44,68,69,70,71,72,73,74,75,76,77,78,79,106,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'STRING':([37,],[55,]),'READ':([39,],[59,]),'MATRIX':([39,],[61,]),'CLOSE_PARENTHESIS':([40,42,45,46,47,48,49,50,51,53,54,55,63,66,84,88,90,91,92,93,94,95,96,97,98,99,100,101,121,],[62,64,67,-39,-40,-41,-43,-44,-45,81,82,83,85,88,103,-42,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,134,]),'MULOP':([46,47,48,49,50,51,66,88,90,91,92,93,94,95,96,97,98,99,100,101,],[68,-40,-41,-43,-44,-45,68,-42,68,68,68,68,68,68,68,68,68,68,68,68,]),'DIVOP':([46,47,48,49,50,51,66,88,90,91,92,93,94,95,96,97,98,99,100,101,],[69,-40,-41,-43,-44,-45,69,-42,69,69,69,69,69,69,69,69,69,69,69,69,]),'SUMOP':([46,47,48,49,50,51,66,88,90,91,92,93,94,95,96,97,98,99,100,101,],[70,-40,-41,-43,-44,-45,70,-42,70,70,70,70,70,70,70,70,70,70,70,70,]),'SUBOP':([46,47,48,49,50,51,66,88,90,91,92,93,94,95,96,97,98,99,100,101,],[71,-40,-41,-43,-44,-45,71,-42,71,71,71,71,71,71,71,71,71,71,71,71,]),'EQ':([46,47,48,49,50,51,66,88,90,91,92,93,94,95,96,97,98,99,100,101,],[72,-40,-41,-43,-44,-45,72,-42,72,72,72,72,72,72,72,72,72,72,72,72,]),'NE':([46,47,48,49,50,51,66,88,90,91,92,93,94,95,96,97,98,99,100,101,],[73,-40,-41,-43,-44,-45,73,-42,73,73,73,73,73,73,73,73,73,73,73,73,]),'LT':([46,47,48,49,50,51,66,88,90,91,92,93,94,95,96,97,98,99,100,101,],[74,-40,-41,-43,-44,-45,74,-42,74,74,74,74,74,74,74,74,74,74,74,74,]),'GT':([46,47,48,49,50,51,66,88,90,91,92,93,94,95,96,97,98,99,100,101,],[75,-40,-41,-43,-44,-45,75,-42,75,75,75,75,75,75,75,75,75,75,75,75,]),'LE':([46,47,48,49,50,51,66,88,90,91,92,93,94,95,96,97,98,99,100,101,],[76,-40,-41,-43,-44,-45,76,-42,76,76,76,76,76,76,76,76,76,76,76,76,]),'GE':([46,47,48,49,50,51,66,88,90,91,92,93,94,95,96,97,98,99,100,101,],[77,-40,-41,-43,-44,-45,77,-42,77,77,77,77,77,77,77,77,77,77,77,77,]),'AND':([46,47,48,49,50,51,66,88,90,91,92,93,94,95,96,97,98,99,100,101,],[78,-40,-41,-43,-44,-45,78,-42,78,78,78,78,78,78,78,78,78,78,78,78,]),'OR':([46,47,48,49,50,51,66,88,90,91,92,93,94,95,96,97,98,99,100,101,],[79,-40,-41,-43,-44,-45,79,-42,79,79,79,79,79,79,79,79,79,79,79,79,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'MAIN_PROGRAM':([0,],[1,]),'STRUCTURES':([0,3,4,5,6,7,8,9,10,11,12,33,35,86,89,102,],[2,22,23,24,25,26,27,28,29,30,31,43,52,105,107,108,]),'FOR_LOOP':([0,3,4,5,6,7,8,9,10,11,12,33,35,86,89,102,104,110,111,112,113,114,115,116,117,118,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,110,110,110,110,110,110,110,110,110,110,]),'DO_WHILE_LOOP':([0,3,4,5,6,7,8,9,10,11,12,33,35,86,89,102,104,110,111,112,113,114,115,116,117,118,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,111,111,111,111,111,111,111,111,111,111,]),'WHILE_LOOP':([0,3,4,5,6,7,8,9,10,11,12,33,35,86,89,102,104,110,111,112,113,114,115,116,117,118,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,112,112,112,112,112,112,112,112,112,112,]),'ELSE_CONDITIONAL':([0,3,4,5,6,7,8,9,10,11,12,33,35,86,89,102,104,110,111,112,113,114,115,116,117,118,123,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,113,113,113,113,113,113,113,113,113,113,135,]),'IF_CONDITIONAL':([0,3,4,5,6,7,8,9,10,11,12,33,35,86,89,102,104,110,111,112,113,114,115,116,117,118,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,114,114,114,114,114,114,114,114,114,114,]),'OUTPUT':([0,3,4,5,6,7,8,9,10,11,12,33,35,86,89,102,104,110,111,112,113,114,115,116,117,118,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,115,115,115,115,115,115,115,115,115,115,]),'INPUT':([0,3,4,5,6,7,8,9,10,11,12,33,35,38,86,89,102,104,110,111,112,113,114,115,116,117,118,],[9,9,9,9,9,9,9,9,9,9,9,9,9,57,9,9,9,116,116,116,116,116,116,116,116,116,116,]),'VAR':([0,3,4,5,6,7,8,9,10,11,12,33,35,38,86,89,102,104,110,111,112,113,114,115,116,117,118,],[10,10,10,10,10,10,10,10,10,10,10,10,10,58,10,10,10,117,117,117,117,117,117,117,117,117,117,]),'FUNCTION':([0,3,4,5,6,7,8,9,10,11,12,33,35,86,89,102,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'FUNC_CALL':([0,3,4,5,6,7,8,9,10,11,12,33,35,86,89,102,104,110,111,112,113,114,115,116,117,118,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,118,118,118,118,118,118,118,118,118,118,]),'empty':([0,3,4,5,6,7,8,9,10,11,12,33,35,86,89,102,104,110,111,112,113,114,115,116,117,118,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,119,119,119,119,119,119,119,119,119,119,]),'EXP':([34,36,37,39,106,],[45,53,54,60,121,]),'VALUE':([34,36,37,39,44,68,69,70,71,72,73,74,75,76,77,78,79,106,],[46,46,46,46,66,90,91,92,93,94,95,96,97,98,99,100,101,46,]),'EARITH':([34,36,37,39,44,68,69,70,71,72,73,74,75,76,77,78,79,106,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'ELOGIC':([34,36,37,39,44,68,69,70,71,72,73,74,75,76,77,78,79,106,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'NON_FUNCTION':([104,110,111,112,113,114,115,116,117,118,],[109,125,126,127,128,129,130,131,132,133,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> MAIN_PROGRAM","S'",1,None,None,None),
  ('empty -> <empty>','empty',0,'p_empty','Aurorus2.py',427),
  ('MAIN_PROGRAM -> STRUCTURES','MAIN_PROGRAM',1,'p_MAIN_PROGRAM','Aurorus2.py',441),
  ('STRUCTURES -> FOR_LOOP STRUCTURES','STRUCTURES',2,'p_STRUCTURES','Aurorus2.py',447),
  ('STRUCTURES -> DO_WHILE_LOOP STRUCTURES','STRUCTURES',2,'p_STRUCTURES','Aurorus2.py',448),
  ('STRUCTURES -> WHILE_LOOP STRUCTURES','STRUCTURES',2,'p_STRUCTURES','Aurorus2.py',449),
  ('STRUCTURES -> ELSE_CONDITIONAL STRUCTURES','STRUCTURES',2,'p_STRUCTURES','Aurorus2.py',450),
  ('STRUCTURES -> IF_CONDITIONAL STRUCTURES','STRUCTURES',2,'p_STRUCTURES','Aurorus2.py',451),
  ('STRUCTURES -> OUTPUT STRUCTURES','STRUCTURES',2,'p_STRUCTURES','Aurorus2.py',452),
  ('STRUCTURES -> INPUT STRUCTURES','STRUCTURES',2,'p_STRUCTURES','Aurorus2.py',453),
  ('STRUCTURES -> VAR STRUCTURES','STRUCTURES',2,'p_STRUCTURES','Aurorus2.py',454),
  ('STRUCTURES -> FUNCTION STRUCTURES','STRUCTURES',2,'p_STRUCTURES','Aurorus2.py',455),
  ('STRUCTURES -> FUNC_CALL STRUCTURES','STRUCTURES',2,'p_STRUCTURES','Aurorus2.py',456),
  ('STRUCTURES -> empty','STRUCTURES',1,'p_STRUCTURES','Aurorus2.py',457),
  ('VAR -> ID COMMA VAR','VAR',3,'p_VAR','Aurorus2.py',463),
  ('VAR -> ID IS_VALUE EXP','VAR',3,'p_VAR','Aurorus2.py',464),
  ('VAR -> ID IS_VALUE MATRIX','VAR',3,'p_VAR','Aurorus2.py',465),
  ('INPUT -> ID COMMA INPUT','INPUT',3,'p_INPUT','Aurorus2.py',477),
  ('INPUT -> ID IS_VALUE READ OPEN_PARENTHESIS CLOSE_PARENTHESIS','INPUT',5,'p_INPUT','Aurorus2.py',478),
  ('OUTPUT -> PRINT OPEN_PARENTHESIS EXP CLOSE_PARENTHESIS','OUTPUT',4,'p_OUTPUT','Aurorus2.py',484),
  ('OUTPUT -> PRINT OPEN_PARENTHESIS STRING CLOSE_PARENTHESIS','OUTPUT',4,'p_OUTPUT','Aurorus2.py',485),
  ('IF_CONDITIONAL -> IF OPEN_PARENTHESIS EXP CLOSE_PARENTHESIS OPEN_BRACES STRUCTURES CLOSE_BRACES ELSE_CONDITIONAL','IF_CONDITIONAL',8,'p_IF_CONDITIONAL','Aurorus2.py',491),
  ('IF_CONDITIONAL -> IF OPEN_PARENTHESIS EXP CLOSE_PARENTHESIS OPEN_BRACES STRUCTURES CLOSE_BRACES','IF_CONDITIONAL',7,'p_IF_CONDITIONAL','Aurorus2.py',492),
  ('ELSE_CONDITIONAL -> ELSE OPEN_BRACES STRUCTURES CLOSE_BRACES','ELSE_CONDITIONAL',4,'p_ELSE_CONDITIONAL','Aurorus2.py',498),
  ('WHILE_LOOP -> WHILE OPEN_PARENTHESIS EXP CLOSE_PARENTHESIS OPEN_BRACES STRUCTURES CLOSE_BRACES','WHILE_LOOP',7,'p_WHILE_LOOP','Aurorus2.py',504),
  ('DO_WHILE_LOOP -> DO OPEN_BRACES STRUCTURES CLOSE_BRACES WHILE OPEN_PARENTHESIS EXP CLOSE_PARENTHESIS','DO_WHILE_LOOP',8,'p_DO_WHILE_LOOP','Aurorus2.py',510),
  ('FOR_LOOP -> FOR OPEN_PARENTHESIS SEQUENCE CLOSE_PARENTHESIS OPEN_BRACES STRUCTURES CLOSE_BRACES','FOR_LOOP',7,'p_FOR_LOOP','Aurorus2.py',516),
  ('FUNCTION -> FUNC ID OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_BRACES NON_FUNCTION CLOSE_BRACES','FUNCTION',7,'p_FUNCTION','Aurorus2.py',522),
  ('NON_FUNCTION -> FOR_LOOP NON_FUNCTION','NON_FUNCTION',2,'p_NON_FUNCTION','Aurorus2.py',528),
  ('NON_FUNCTION -> DO_WHILE_LOOP NON_FUNCTION','NON_FUNCTION',2,'p_NON_FUNCTION','Aurorus2.py',529),
  ('NON_FUNCTION -> WHILE_LOOP NON_FUNCTION','NON_FUNCTION',2,'p_NON_FUNCTION','Aurorus2.py',530),
  ('NON_FUNCTION -> ELSE_CONDITIONAL NON_FUNCTION','NON_FUNCTION',2,'p_NON_FUNCTION','Aurorus2.py',531),
  ('NON_FUNCTION -> IF_CONDITIONAL NON_FUNCTION','NON_FUNCTION',2,'p_NON_FUNCTION','Aurorus2.py',532),
  ('NON_FUNCTION -> OUTPUT NON_FUNCTION','NON_FUNCTION',2,'p_NON_FUNCTION','Aurorus2.py',533),
  ('NON_FUNCTION -> INPUT NON_FUNCTION','NON_FUNCTION',2,'p_NON_FUNCTION','Aurorus2.py',534),
  ('NON_FUNCTION -> VAR NON_FUNCTION','NON_FUNCTION',2,'p_NON_FUNCTION','Aurorus2.py',535),
  ('NON_FUNCTION -> FUNC_CALL NON_FUNCTION','NON_FUNCTION',2,'p_NON_FUNCTION','Aurorus2.py',536),
  ('NON_FUNCTION -> empty','NON_FUNCTION',1,'p_NON_FUNCTION','Aurorus2.py',537),
  ('FUNC_CALL -> ID OPEN_PARENTHESIS CLOSE_PARENTHESIS','FUNC_CALL',3,'p_FUNC_CALL','Aurorus2.py',542),
  ('EXP -> VALUE','EXP',1,'p_EXP','Aurorus2.py',551),
  ('VALUE -> EARITH','VALUE',1,'p_VALUE','Aurorus2.py',563),
  ('VALUE -> ELOGIC','VALUE',1,'p_VALUE','Aurorus2.py',564),
  ('VALUE -> OPEN_PARENTHESIS VALUE CLOSE_PARENTHESIS','VALUE',3,'p_VALUE','Aurorus2.py',565),
  ('VALUE -> VAL','VALUE',1,'p_VALUE','Aurorus2.py',566),
  ('VALUE -> ID','VALUE',1,'p_VALUE','Aurorus2.py',567),
  ('VALUE -> MATRIX_VAL','VALUE',1,'p_VALUE','Aurorus2.py',568),
  ('EARITH -> VALUE MULOP VALUE','EARITH',3,'p_EARITH','Aurorus2.py',583),
  ('EARITH -> VALUE DIVOP VALUE','EARITH',3,'p_EARITH','Aurorus2.py',584),
  ('EARITH -> VALUE SUMOP VALUE','EARITH',3,'p_EARITH','Aurorus2.py',585),
  ('EARITH -> VALUE SUBOP VALUE','EARITH',3,'p_EARITH','Aurorus2.py',586),
  ('ELOGIC -> VALUE EQ VALUE','ELOGIC',3,'p_ELOGIC','Aurorus2.py',598),
  ('ELOGIC -> VALUE NE VALUE','ELOGIC',3,'p_ELOGIC','Aurorus2.py',599),
  ('ELOGIC -> VALUE LT VALUE','ELOGIC',3,'p_ELOGIC','Aurorus2.py',600),
  ('ELOGIC -> VALUE GT VALUE','ELOGIC',3,'p_ELOGIC','Aurorus2.py',601),
  ('ELOGIC -> VALUE LE VALUE','ELOGIC',3,'p_ELOGIC','Aurorus2.py',602),
  ('ELOGIC -> VALUE GE VALUE','ELOGIC',3,'p_ELOGIC','Aurorus2.py',603),
  ('ELOGIC -> VALUE AND VALUE','ELOGIC',3,'p_ELOGIC','Aurorus2.py',604),
  ('ELOGIC -> VALUE OR VALUE','ELOGIC',3,'p_ELOGIC','Aurorus2.py',605),
]
