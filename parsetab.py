
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'MAIN_PROGRAMAND CLOSE_BRACES CLOSE_PARENTHESIS COLON COMMA DIVOP DO ELSE EQ FOR FUNC GE GT ID IF IS_VALUE LE LT MULOP NE OPEN_BRACES OPEN_PARENTHESIS OR PRINT READ SUBOP SUMOP VAL WHILEempty :\n    MAIN_PROGRAM : STRUCTURES\n    \n    STRUCTURES  : FOR_LOOP STRUCTURES\n                | DO_WHILE_LOOP STRUCTURES\n                | WHILE_LOOP STRUCTURES\n                | ELSE_CONDITIONAL STRUCTURES\n                | IF_CONDITIONAL STRUCTURES\n                | OUTPUT STRUCTURES\n                | INPUT STRUCTURES\n                | VAR STRUCTURES\n                | FUNCTION STRUCTURES\n                | empty\n    \n    VAR : ID COMMA VAR\n        | ID IS_VALUE EXP\n    \n    INPUT \t: ID COMMA INPUT\n            | ID IS_VALUE READ OPEN_PARENTHESIS CLOSE_PARENTHESIS\n    \n    OUTPUT : PRINT OPEN_PARENTHESIS ID CLOSE_PARENTHESIS\n    \n    IF_CONDITIONAL  : IF OPEN_PARENTHESIS EXP CLOSE_PARENTHESIS OPEN_BRACES STRUCTURES CLOSE_BRACES ELSE_CONDITIONAL\n                    | IF OPEN_PARENTHESIS EXP CLOSE_PARENTHESIS OPEN_BRACES STRUCTURES CLOSE_BRACES\n    \n    ELSE_CONDITIONAL : ELSE OPEN_BRACES STRUCTURES CLOSE_BRACES\n    \n    WHILE_LOOP : WHILE OPEN_PARENTHESIS EXP CLOSE_PARENTHESIS OPEN_BRACES STRUCTURES CLOSE_BRACES\n    \n    DO_WHILE_LOOP : DO OPEN_BRACES STRUCTURES CLOSE_BRACES WHILE OPEN_PARENTHESIS EXP CLOSE_PARENTHESIS\n    \n    FOR_LOOP : FOR OPEN_PARENTHESIS EXP COLON EXP CLOSE_PARENTHESIS OPEN_BRACES STRUCTURES CLOSE_BRACES \n    \n    FUNCTION : FUNC ID OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_BRACES STRUCTURES CLOSE_BRACES \n    \n    EXP\t: VALUE\n    \n    VALUE\t: EARITH\n            | ELOGIC\n            | OPEN_PARENTHESIS VALUE CLOSE_PARENTHESIS\n            | VAL\n    \n    EARITH \t: VALUE MULOP VALUE\n            | VALUE DIVOP VALUE\n            | VALUE SUMOP VALUE\n            | VALUE SUBOP VALUE\n    \n    ELOGIC\t: VALUE EQ VALUE\n            | VALUE NE VALUE\n            | VALUE LT VALUE\n            | VALUE GT VALUE\n            | VALUE LE VALUE\n            | VALUE GE VALUE\n            | VALUE AND VALUE\n            | VALUE OR VALUE\n    '
    
_lr_action_items = {'FOR':([0,3,4,5,6,7,8,9,10,11,31,33,41,42,43,44,50,51,53,71,73,76,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,94,100,102,103,104,106,107,108,],[13,13,13,13,13,13,13,13,13,13,13,13,-25,-26,-27,-29,-15,-13,-14,-20,-17,-28,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,13,13,-16,13,13,-21,-19,-24,-22,-18,-23,]),'DO':([0,3,4,5,6,7,8,9,10,11,31,33,41,42,43,44,50,51,53,71,73,76,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,94,100,102,103,104,106,107,108,],[14,14,14,14,14,14,14,14,14,14,14,14,-25,-26,-27,-29,-15,-13,-14,-20,-17,-28,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,14,14,-16,14,14,-21,-19,-24,-22,-18,-23,]),'WHILE':([0,3,4,5,6,7,8,9,10,11,31,33,41,42,43,44,50,51,53,69,71,73,76,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,94,100,102,103,104,106,107,108,],[15,15,15,15,15,15,15,15,15,15,15,15,-25,-26,-27,-29,-15,-13,-14,90,-20,-17,-28,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,15,15,-16,15,15,-21,-19,-24,-22,-18,-23,]),'ELSE':([0,3,4,5,6,7,8,9,10,11,31,33,41,42,43,44,50,51,53,71,73,76,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,94,100,102,103,104,106,107,108,],[16,16,16,16,16,16,16,16,16,16,16,16,-25,-26,-27,-29,-15,-13,-14,-20,-17,-28,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,16,16,-16,16,16,-21,16,-24,-22,-18,-23,]),'IF':([0,3,4,5,6,7,8,9,10,11,31,33,41,42,43,44,50,51,53,71,73,76,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,94,100,102,103,104,106,107,108,],[17,17,17,17,17,17,17,17,17,17,17,17,-25,-26,-27,-29,-15,-13,-14,-20,-17,-28,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,17,17,-16,17,17,-21,-19,-24,-22,-18,-23,]),'PRINT':([0,3,4,5,6,7,8,9,10,11,31,33,41,42,43,44,50,51,53,71,73,76,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,94,100,102,103,104,106,107,108,],[18,18,18,18,18,18,18,18,18,18,18,18,-25,-26,-27,-29,-15,-13,-14,-20,-17,-28,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,18,18,-16,18,18,-21,-19,-24,-22,-18,-23,]),'ID':([0,3,4,5,6,7,8,9,10,11,20,31,33,35,36,41,42,43,44,50,51,53,71,73,76,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,94,100,102,103,104,106,107,108,],[19,19,19,19,19,19,19,19,19,19,38,19,19,49,19,-25,-26,-27,-29,-15,-13,-14,-20,-17,-28,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,19,19,-16,19,19,-21,-19,-24,-22,-18,-23,]),'FUNC':([0,3,4,5,6,7,8,9,10,11,31,33,41,42,43,44,50,51,53,71,73,76,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,94,100,102,103,104,106,107,108,],[20,20,20,20,20,20,20,20,20,20,20,20,-25,-26,-27,-29,-15,-13,-14,-20,-17,-28,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,20,20,-16,20,20,-21,-19,-24,-22,-18,-23,]),'$end':([0,1,2,3,4,5,6,7,8,9,10,11,12,21,22,23,24,25,26,27,28,29,41,42,43,44,50,51,53,71,73,76,78,79,80,81,82,83,84,85,86,87,88,89,93,102,103,104,106,107,108,],[-1,0,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-12,-3,-4,-5,-6,-7,-8,-9,-10,-11,-25,-26,-27,-29,-15,-13,-14,-20,-17,-28,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-16,-21,-19,-24,-22,-18,-23,]),'CLOSE_BRACES':([3,4,5,6,7,8,9,10,11,12,21,22,23,24,25,26,27,28,29,31,33,41,42,43,44,45,47,50,51,53,71,73,76,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,94,97,98,99,100,102,103,104,105,106,107,108,],[-1,-1,-1,-1,-1,-1,-1,-1,-1,-12,-3,-4,-5,-6,-7,-8,-9,-10,-11,-1,-1,-25,-26,-27,-29,69,71,-15,-13,-14,-20,-17,-28,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-1,-1,-16,-1,102,103,104,-1,-21,-19,-24,108,-22,-18,-23,]),'OPEN_PARENTHESIS':([13,15,17,18,30,32,34,37,38,39,52,56,57,58,59,60,61,62,63,64,65,66,67,68,90,96,],[30,32,34,35,39,39,39,39,54,39,74,39,39,39,39,39,39,39,39,39,39,39,39,39,96,39,]),'OPEN_BRACES':([14,16,70,72,75,95,],[31,33,91,92,94,100,]),'COMMA':([19,],[36,]),'IS_VALUE':([19,],[37,]),'VAL':([30,32,34,37,39,56,57,58,59,60,61,62,63,64,65,66,67,68,96,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'READ':([37,],[52,]),'COLON':([40,41,42,43,44,76,78,79,80,81,82,83,84,85,86,87,88,89,],[56,-25,-26,-27,-29,-28,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,]),'CLOSE_PARENTHESIS':([41,42,43,44,46,48,49,54,55,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,101,],[-25,-26,-27,-29,70,72,73,75,76,93,-28,95,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,106,]),'MULOP':([41,42,43,44,55,76,78,79,80,81,82,83,84,85,86,87,88,89,],[57,-26,-27,-29,57,-28,57,57,57,57,57,57,57,57,57,57,57,57,]),'DIVOP':([41,42,43,44,55,76,78,79,80,81,82,83,84,85,86,87,88,89,],[58,-26,-27,-29,58,-28,58,58,58,58,58,58,58,58,58,58,58,58,]),'SUMOP':([41,42,43,44,55,76,78,79,80,81,82,83,84,85,86,87,88,89,],[59,-26,-27,-29,59,-28,59,59,59,59,59,59,59,59,59,59,59,59,]),'SUBOP':([41,42,43,44,55,76,78,79,80,81,82,83,84,85,86,87,88,89,],[60,-26,-27,-29,60,-28,60,60,60,60,60,60,60,60,60,60,60,60,]),'EQ':([41,42,43,44,55,76,78,79,80,81,82,83,84,85,86,87,88,89,],[61,-26,-27,-29,61,-28,61,61,61,61,61,61,61,61,61,61,61,61,]),'NE':([41,42,43,44,55,76,78,79,80,81,82,83,84,85,86,87,88,89,],[62,-26,-27,-29,62,-28,62,62,62,62,62,62,62,62,62,62,62,62,]),'LT':([41,42,43,44,55,76,78,79,80,81,82,83,84,85,86,87,88,89,],[63,-26,-27,-29,63,-28,63,63,63,63,63,63,63,63,63,63,63,63,]),'GT':([41,42,43,44,55,76,78,79,80,81,82,83,84,85,86,87,88,89,],[64,-26,-27,-29,64,-28,64,64,64,64,64,64,64,64,64,64,64,64,]),'LE':([41,42,43,44,55,76,78,79,80,81,82,83,84,85,86,87,88,89,],[65,-26,-27,-29,65,-28,65,65,65,65,65,65,65,65,65,65,65,65,]),'GE':([41,42,43,44,55,76,78,79,80,81,82,83,84,85,86,87,88,89,],[66,-26,-27,-29,66,-28,66,66,66,66,66,66,66,66,66,66,66,66,]),'AND':([41,42,43,44,55,76,78,79,80,81,82,83,84,85,86,87,88,89,],[67,-26,-27,-29,67,-28,67,67,67,67,67,67,67,67,67,67,67,67,]),'OR':([41,42,43,44,55,76,78,79,80,81,82,83,84,85,86,87,88,89,],[68,-26,-27,-29,68,-28,68,68,68,68,68,68,68,68,68,68,68,68,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'MAIN_PROGRAM':([0,],[1,]),'STRUCTURES':([0,3,4,5,6,7,8,9,10,11,31,33,91,92,94,100,],[2,21,22,23,24,25,26,27,28,29,45,47,97,98,99,105,]),'FOR_LOOP':([0,3,4,5,6,7,8,9,10,11,31,33,91,92,94,100,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'DO_WHILE_LOOP':([0,3,4,5,6,7,8,9,10,11,31,33,91,92,94,100,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'WHILE_LOOP':([0,3,4,5,6,7,8,9,10,11,31,33,91,92,94,100,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'ELSE_CONDITIONAL':([0,3,4,5,6,7,8,9,10,11,31,33,91,92,94,100,103,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,107,]),'IF_CONDITIONAL':([0,3,4,5,6,7,8,9,10,11,31,33,91,92,94,100,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'OUTPUT':([0,3,4,5,6,7,8,9,10,11,31,33,91,92,94,100,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'INPUT':([0,3,4,5,6,7,8,9,10,11,31,33,36,91,92,94,100,],[9,9,9,9,9,9,9,9,9,9,9,9,50,9,9,9,9,]),'VAR':([0,3,4,5,6,7,8,9,10,11,31,33,36,91,92,94,100,],[10,10,10,10,10,10,10,10,10,10,10,10,51,10,10,10,10,]),'FUNCTION':([0,3,4,5,6,7,8,9,10,11,31,33,91,92,94,100,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'empty':([0,3,4,5,6,7,8,9,10,11,31,33,91,92,94,100,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'EXP':([30,32,34,37,56,96,],[40,46,48,53,77,101,]),'VALUE':([30,32,34,37,39,56,57,58,59,60,61,62,63,64,65,66,67,68,96,],[41,41,41,41,55,41,78,79,80,81,82,83,84,85,86,87,88,89,41,]),'EARITH':([30,32,34,37,39,56,57,58,59,60,61,62,63,64,65,66,67,68,96,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'ELOGIC':([30,32,34,37,39,56,57,58,59,60,61,62,63,64,65,66,67,68,96,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> MAIN_PROGRAM","S'",1,None,None,None),
  ('empty -> <empty>','empty',0,'p_empty','Aurorus2.py',126),
  ('MAIN_PROGRAM -> STRUCTURES','MAIN_PROGRAM',1,'p_MAIN_PROGRAM','Aurorus2.py',140),
  ('STRUCTURES -> FOR_LOOP STRUCTURES','STRUCTURES',2,'p_STRUCTURES','Aurorus2.py',146),
  ('STRUCTURES -> DO_WHILE_LOOP STRUCTURES','STRUCTURES',2,'p_STRUCTURES','Aurorus2.py',147),
  ('STRUCTURES -> WHILE_LOOP STRUCTURES','STRUCTURES',2,'p_STRUCTURES','Aurorus2.py',148),
  ('STRUCTURES -> ELSE_CONDITIONAL STRUCTURES','STRUCTURES',2,'p_STRUCTURES','Aurorus2.py',149),
  ('STRUCTURES -> IF_CONDITIONAL STRUCTURES','STRUCTURES',2,'p_STRUCTURES','Aurorus2.py',150),
  ('STRUCTURES -> OUTPUT STRUCTURES','STRUCTURES',2,'p_STRUCTURES','Aurorus2.py',151),
  ('STRUCTURES -> INPUT STRUCTURES','STRUCTURES',2,'p_STRUCTURES','Aurorus2.py',152),
  ('STRUCTURES -> VAR STRUCTURES','STRUCTURES',2,'p_STRUCTURES','Aurorus2.py',153),
  ('STRUCTURES -> FUNCTION STRUCTURES','STRUCTURES',2,'p_STRUCTURES','Aurorus2.py',154),
  ('STRUCTURES -> empty','STRUCTURES',1,'p_STRUCTURES','Aurorus2.py',155),
  ('VAR -> ID COMMA VAR','VAR',3,'p_VAR','Aurorus2.py',161),
  ('VAR -> ID IS_VALUE EXP','VAR',3,'p_VAR','Aurorus2.py',162),
  ('INPUT -> ID COMMA INPUT','INPUT',3,'p_INPUT','Aurorus2.py',195),
  ('INPUT -> ID IS_VALUE READ OPEN_PARENTHESIS CLOSE_PARENTHESIS','INPUT',5,'p_INPUT','Aurorus2.py',196),
  ('OUTPUT -> PRINT OPEN_PARENTHESIS ID CLOSE_PARENTHESIS','OUTPUT',4,'p_OUTPUT','Aurorus2.py',203),
  ('IF_CONDITIONAL -> IF OPEN_PARENTHESIS EXP CLOSE_PARENTHESIS OPEN_BRACES STRUCTURES CLOSE_BRACES ELSE_CONDITIONAL','IF_CONDITIONAL',8,'p_IF_CONDITIONAL','Aurorus2.py',210),
  ('IF_CONDITIONAL -> IF OPEN_PARENTHESIS EXP CLOSE_PARENTHESIS OPEN_BRACES STRUCTURES CLOSE_BRACES','IF_CONDITIONAL',7,'p_IF_CONDITIONAL','Aurorus2.py',211),
  ('ELSE_CONDITIONAL -> ELSE OPEN_BRACES STRUCTURES CLOSE_BRACES','ELSE_CONDITIONAL',4,'p_ELSE_CONDITIONAL','Aurorus2.py',234),
  ('WHILE_LOOP -> WHILE OPEN_PARENTHESIS EXP CLOSE_PARENTHESIS OPEN_BRACES STRUCTURES CLOSE_BRACES','WHILE_LOOP',7,'p_WHILE_LOOP','Aurorus2.py',240),
  ('DO_WHILE_LOOP -> DO OPEN_BRACES STRUCTURES CLOSE_BRACES WHILE OPEN_PARENTHESIS EXP CLOSE_PARENTHESIS','DO_WHILE_LOOP',8,'p_DO_WHILE_LOOP','Aurorus2.py',246),
  ('FOR_LOOP -> FOR OPEN_PARENTHESIS EXP COLON EXP CLOSE_PARENTHESIS OPEN_BRACES STRUCTURES CLOSE_BRACES','FOR_LOOP',9,'p_FOR_LOOP','Aurorus2.py',252),
  ('FUNCTION -> FUNC ID OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_BRACES STRUCTURES CLOSE_BRACES','FUNCTION',7,'p_FUNCTION','Aurorus2.py',258),
  ('EXP -> VALUE','EXP',1,'p_EXP','Aurorus2.py',267),
  ('VALUE -> EARITH','VALUE',1,'p_VALUE','Aurorus2.py',274),
  ('VALUE -> ELOGIC','VALUE',1,'p_VALUE','Aurorus2.py',275),
  ('VALUE -> OPEN_PARENTHESIS VALUE CLOSE_PARENTHESIS','VALUE',3,'p_VALUE','Aurorus2.py',276),
  ('VALUE -> VAL','VALUE',1,'p_VALUE','Aurorus2.py',277),
  ('EARITH -> VALUE MULOP VALUE','EARITH',3,'p_EARITH','Aurorus2.py',293),
  ('EARITH -> VALUE DIVOP VALUE','EARITH',3,'p_EARITH','Aurorus2.py',294),
  ('EARITH -> VALUE SUMOP VALUE','EARITH',3,'p_EARITH','Aurorus2.py',295),
  ('EARITH -> VALUE SUBOP VALUE','EARITH',3,'p_EARITH','Aurorus2.py',296),
  ('ELOGIC -> VALUE EQ VALUE','ELOGIC',3,'p_ELOGIC','Aurorus2.py',308),
  ('ELOGIC -> VALUE NE VALUE','ELOGIC',3,'p_ELOGIC','Aurorus2.py',309),
  ('ELOGIC -> VALUE LT VALUE','ELOGIC',3,'p_ELOGIC','Aurorus2.py',310),
  ('ELOGIC -> VALUE GT VALUE','ELOGIC',3,'p_ELOGIC','Aurorus2.py',311),
  ('ELOGIC -> VALUE LE VALUE','ELOGIC',3,'p_ELOGIC','Aurorus2.py',312),
  ('ELOGIC -> VALUE GE VALUE','ELOGIC',3,'p_ELOGIC','Aurorus2.py',313),
  ('ELOGIC -> VALUE AND VALUE','ELOGIC',3,'p_ELOGIC','Aurorus2.py',314),
  ('ELOGIC -> VALUE OR VALUE','ELOGIC',3,'p_ELOGIC','Aurorus2.py',315),
]
